plugins {
    id "groovy"
    id "io.micronaut.application" version '1.0.3'
//    id 'com.bmuschko.docker-remote-api' version '6.6.1'
}
import com.bmuschko.gradle.docker.tasks.container.*

version "0.1"
group "org.ethelred.hello"

repositories {
    mavenCentral()
    jcenter()
}

micronaut {
    testRuntime "spock2"
    processing {
        incremental true
        annotations "org.ethelred.hello.*"
    }
}

nativeImage {
    imageName = "application.fcgi"
    workingDir = "$buildDir/install/integration-mn/native"
}

dependencies {
    implementation project(':micronaut-fcgi')
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("javax.annotation:javax.annotation-api")
    implementation("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation "io.micronaut.test:micronaut-test-core:2.2.1"
    testImplementation "io.micronaut.test:micronaut-test-spock:2.2.1"

}

mainClassName = "org.ethelred.hello.Application"
java {
    sourceCompatibility = JavaVersion.toVersion('11')
    targetCompatibility = JavaVersion.toVersion('11')
}

task linkWebDir(type: DockerExecContainer) {
    dependsOn ":docker:startContainer"
    targetContainerId project.containerName
    workingDir = "/app"
    withCommand("ln", "-s", "$buildDir/install/integration-mn".replaceAll("$rootProject.projectDir", "/app"), "$apacheRoot/")
}

task nativeImageInDocker(type: DockerExecContainer) {
    dependsOn ":docker:startContainer", linkWebDir
    targetContainerId project.containerName
    workingDir = "/app"
    withCommand("./gradlew", project.nativeImage.path)
}

task installHtaccess(type: Copy) {
    from(sourceSets.main.resources)
    into "$buildDir/install/integration-mn/"
}

test.dependsOn nativeImageInDocker, installHtaccess